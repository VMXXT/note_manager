from datetime import datetime  # импортируем библиотеку для работы с датами

# Создаем словарь для хранения информации о заметке и запрашиваем имя пользователя
note = {"username": input("Введите имя пользователя: "), "titles": []}

# создаем цикл для множественного ввода заголовков
while True:
    # Запрашиваем у пользователя ввод заголовка заметки
    title = input("Введите заголовок заметки (или 'стоп' или Enter для завершения кода): ")

    # Проверяем команду завершения ввода
    if title.lower() == "стоп" or title == "":
        break

    # Добавляем только новые значения в список заголовков
    if title not in note["titles"]:  # если такого заголовка нет, добавляем
        note["titles"].append(title)
    elif title in note["titles"]:  # если заголовок есть, просим ввести другой
        print("Этот заголовок уже был добавлен. Введите другой.")

note["content"] = input("Введите описание заметки: \n")
note["status"] = input("Введите статус заметки (например, 'Активна', 'Выполнена'): ")

# Форматируем дату создания заметки и дату дедлайн
temp_created_date = datetime.today()  # присваиваем переменной сегодняшнюю дату
note["created_date"] = datetime.strftime(temp_created_date, "%d.%m")  # форматируем, убираем год

# создадим цикл для проверки верного ввода даты дедлайн
while True:
    temp_issue_date = input("Дата дедлайн в формате дд.мм.гггг - ")

    try:
        note["issue_date"] = datetime.strptime(temp_issue_date, "%d.%m.%Y").strftime("%d.%m")  # убираем год
        break  # Выход из цикла, если дата введена правильно

    except ValueError:
        # Если возникает ошибка, значит дата введена неправильно
        print("Вы ввели дату в неверном формате. Пожалуйста, используйте формат дд.мм.гггг.")

# Вывод данных
# выводим собранные данные
print("\nСобранная информация о заметке:")
for key, value in note.items():
    print(f"{key.capitalize()}: {value}")
